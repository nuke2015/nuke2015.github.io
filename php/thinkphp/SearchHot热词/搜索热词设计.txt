
一般的缓存都是做在控制层,不做在model层,
为什么热词这个功能的缓存要做在数据层呢?
是因为它不需要 清除缓存,相反,要尽量保持有缓存内容,
但又是必须会过期的内容,如果不过期,就等同于持久化了.
如果过期以后,接口的调用就需要等待数据从mysql里,
执行
SELECT `search_id`,`search_content`,count(user_id) FROM `search_id` WHERE 1 GROUP BY search_content ORDER BY count(user_id) desc LIMIT 0,5
这条语句来得到热词.
在测试的时候,这语句是蛮快的.
因为测试用的人少,搜索的词特别少.
但在线上的时候,这条搜索是非常慢的.
因为它需要对整表统计,并排序.
如果有几万条数据,那慢得要死.

所以,想了个办法,就是离线处理,
在接口到来之前把缓存的内容生成好,比如,每小时.
这和在接口中直接做的区别就是.
每隔一小时,接口一定会有一次请求不到数据.这样才去动态生成,这时候是需要等待的.
而异步的好处就是,接口每次来,一般都有数据,除非很特殊的,碰到了定时任务在更新缓存.
即便是定时任务正在更新缓存,
它也不是完全没有内容.
所以,碰撞的概率大大减少.
从一天之内,蛋疼24次,直接变成0次.

