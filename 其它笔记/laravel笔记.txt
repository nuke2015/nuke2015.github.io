

Article::orderBy('created_at', 'desc')->paginate(5);
文章排序,并分页

return View::make('account.index')->with(compact('comments'));
返回渲染后的内容

public function getIndex(){}
restful路由

$data = Input::all();
所有的录入=$_REQUEST


Redirect::back()->withInput()->withErrors($this->messages->add('password_old', '原始密码错误'));
返回跳转带出错提示

Validator::make($data, $rules, $messages);
按rules数组对$data,做消息提示
$validator->passes()
验证通过

Input::get('password');
取get的数据

$user->save()
数据保存

//图片上传
$image    = Input::file('portrait');
$ext      = $image->guessClientExtension();  // 根据 mime 类型取得真实拓展名
$fullname = $image->getClientOriginalName(); // 客户端文件名，包括客户端拓展名
$hashname = date('H.i.s').'-'.md5($fullname).'.'.$ext; // 哈希处理过的文件名，包括真实拓展名

//静态路径
public_path('portrait/large/'.$hashname)

// 删除旧头像
File::delete(
public_path('portrait/large/'.$oldImage),
public_path('portrait/medium/'.$oldImage),
public_path('portrait/small/'.$oldImage)
);
删除文件

//取评论,按15分页
Comment::where('user_id', Auth::user()->id)->paginate(15);

$user->where('user_id', Auth::user()->id)->first();
//取单条;

return Redirect::intended();
//跳到相关链接

Redirect::to('/');
//绝对跳转

Mail::send('authority.email.activation', $with, function ($message) use ($user) {
$message
->to($user->email)
->subject('Simple - Blog 账号激活邮件'); // 标题
});
//发邮件

Redirect::route('signupSuccess', $user->email);
按路由跳转

Activation::whereRaw("email = '{$email}'")->first();
字符串做条件

is_null($activation) AND App::abort(404);
中断

// CSRF 保护
$this->beforeFilter('csrf', array('on' => 'post|put|delete'));
// 实例化 消息对象
$this->messages = new Illuminate\Support\MessageBag;

//布局
if (! is_null($this->layout)) {
$this->layout = View::make($this->layout);
}

// 创建验证规则
$unique = $this->unique();

//类扩展
class NerdController extends \BaseController {
}

    /**
     * 自定义验证消息
     * @var array
     */
    protected $validatorMessages = array(
        'email.required'      => '请输入邮箱地址。',
        'email.email'         => '请输入正确的邮箱地址。',
        'email.unique'        => '此邮箱已被使用。',
        'password.required'   => '请输入密码。',
        'password.alpha_dash' => '密码格式不正确。',
        'password.between'    => '密码长度请保持在:min到:max位之间。',
        'password.confirmed'  => '两次输入的密码不一致。',
        'is_admin.in'         => '非法输入。',
    );

//单独取两栏列表
Category::lists('name', 'id');

控制器路由
Route::controller('users', 'UserController');




